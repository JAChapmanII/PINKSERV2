#!/bin/bash

OUTF="./lib/modules_gen.cpp"

:> mincs
:> mods
:> mfuncs

echo -e "void defineModules() {" >> mods

echo -e "void setupFunctions() {" >> mfuncs
echo -e "\tcerr << \"discovered functions: \" << endl;" >> mfuncs;

for f in modules/*.hpp; do
	module=$(grep '^// #m: ' "$f" | cut -d':' -f2-)
	mname=$(echo $(echo $module | cut -d':' -f1))
	loadf=$(echo $(echo $module | cut -d':' -f2))
	savef=$(echo $(echo $module | cut -d':' -f3))
	mdesc=$(echo $(echo $module | cut -d':' -f4))
	echo "module $mname ($mdesc) uses $loadf and $savef"

	echo -e "#include \"$(basename "$f")\"" >> mincs
	# save the module definition data to a file
	echo -e "\tModule $mname = { \"$mname\", \"$mdesc\", &$loadf, &$savef, false };" >> mods
	echo -e "\tmodules::modules.push_back($mname);" >> mods

	#echo -e "\tcerr << \"loading $mname ($mdesc)\" << endl;" >> mloads
	#echo -e "\t$loadf(brain); // load $mname ($mdesc)"  >> mloads
	#echo -e "\tcerr << \"saving $mname ($mdesc)\" << endl;" >> msaves
	#cho -e "\t$savef(brain); // save $mname ($mdesc)" >> msaves

	# add module function header to file
	echo -e "" >> mfuncs;
	echo -e "\t// functions from $mname" >> mfuncs
	grep '^// #f: ' "$f" | cut -d':' -f2- | while read -r function; do
		fname=$(echo $(echo $function | cut -d':' -f1))
		fdesc=$(echo $(echo $function | cut -d':' -f2))
		echo "  has function $fname ($fdesc)"

		# save the function information to a file
		echo -e "\tcerr << \"\\\t$fname ($fdesc) [$mname]\" << endl;" >> mfuncs;
		echo -e "\tmodules::hfmap[\"$fname\"] = &$fname;" >> mfuncs
		echo -e "\tglobal::vars[\"${fname}\"] = \"{ hard coded }\";" >> mfuncs
		echo -e "\tglobal::vars[\"${fname}.help\"] = \"$fdesc\";" >> mfuncs
		# TODO: setup permissions?
	done
	echo -e "\tcerr << endl;" >> mfuncs
done

echo "}" | tee -a mods mfuncs >/dev/null

{
	cat mincs
	echo ""
	cat mods
	echo ""
	cat mfuncs
} > $OUTF

rm mods mfuncs

